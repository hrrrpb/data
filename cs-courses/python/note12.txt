Regular expressions

Syntax for pattern

exact text:  abc

(1~3 a, 1~2 b, 1~4 c)
a{1,3}b{1,2}c{1,4}
a{2} exactly 2 times equals "aa"

a set of characters: match only one character in the string
[abcde]
[a-zA-Z] : all upper and lower case 
if "-" is included, should be the first one : [-a-zA-z]

except
[^A-Z]  anything but capital letters
-----------------------------------------
numbers of occurence
* : 0 or more occurrences
 eg [a-zA-Z]* : any letter string

+ : 1 or more

? : 0 or 1
-----------------------------------------
example of variable name
_*[a-zA-Z][a-zA-Z_0-9]*

[a-zA-Z_]+[a-zA-Z_0-9]*
eg _9a
-----------------------------------------
. : any character

.* : any string

ab|ad : or , a[bd] a(b|d)
(ab|ad)........ group a pattern 

\., \( : special characters as characters
^ : used in brackets, except
    used outside brackets - start of string
$ - end of string

^(ab|ad)$

------------------------------------------
eg american phone numbers

(\([1-9][0-9]{2}\) |(1-)?[1-9][0-9]{2}-)[1-9][0-9]{2}-[0-9]{3}

------------------------------------------
import re

rechecker = re.compile(regex)
create an object from regular expression to process and match

put r" " around regex to use it
r - raw string  request python not to process the escaped literal thing

rechecker.search(string)
go through string and find match,  left to right search, find the 1st occurrence, and return the match object

matchobj = rechecker.search(string)
the object has the string, the location, the matched special notation
eg. what is the group "()". If you are interested in some special part, you can put () around it for easy accessing in matchobj

matchobj.group(index)   0: entire string
                        1: area code
                        2: phone number (if grouped)


matchobj.start() : return the start index
matchobj.end() :   return the end index

matchobj.findall(string)  find all occurrences, a generator function
for matched in mathchobj.findall(string)

rechecker.sub(string,replacement string or function-doing manuipulation,count )






































 






